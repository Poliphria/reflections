When would you want to use a remote repository rather than keeping 
all your work local?

  Using a remote repository makes it easier to collaborate with others and
   for when you switch between desktop and laptop. 

Why might you want to always pull changes manually rather than having
Git automatically stay up-to-date with your remote repository?

  Automatic pulls create a security risk if someone can automatically alters code. 
  Automatic also might mess up what you are working on. 

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

  Branches are for when you want to make changes to a local repository but not 
  on the main (master) branch of the code. You would use this if you want to 
  try an experimental feature. Clones are used when you want to grab an existing
  repository on github with a commit (include the README.md file on github) and
  copy it to your local machine. Use this when you want to grab from github to laptop.
  Forks are when you want to give credit to someone before you make changes on github 
  and copy their repository to your GitHub account. 

What is the benefit of having a copy of the last known state
of the remote stored locally?

  The benefit is that in case you go offline you always will know the state
  of the remote repository.

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

  Collaborating without Git or GitHub would involve a lot of travelling 
  or sending files to each other manually that would be ineffecient. It would
  be harder to collaborate as quickly. 

When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have? 

 This approach has benefits because there might be conflicts between the master 
 branch and your branch that may break the code. Changing on the master branch
 has its upsides becuase it's a tad less work rather than working with branches
 and having to pull manually. 